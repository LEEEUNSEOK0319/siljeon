spring.application.name=SS
spring.config.import=optional:application-secret.properties

server.port=8090

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://project-db-campus.smhrd.com:3307/campus_25SW_LI_p3_3?serverTimezone=Asia/Seoul
spring.datasource.username=campus_25SW_LI_p3_3
spring.datasource.password=smhrd3

spring.security.oauth2.client.registration.google.client-id=844340246101-ecndtfnebng4vv9ksv0kt4g76pb77i0j.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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

# JPA 설정
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

spring.jpa.properties.hibernate.format_sql = true
spring.jpa.show-sql=true

# Google OAuth2 Client 등록
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8090/api/auth/google

# Google OAuth2 Provider 설정
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# CORS (React 개발 서버 허용)
spring.web.cors.allowed-origins=http://localhost:5173
spring.web.cors.allow-credentials=true